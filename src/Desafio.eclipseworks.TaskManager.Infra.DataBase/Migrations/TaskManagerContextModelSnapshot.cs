// <auto-generated />
using System;
using Desafio.EclipseWorks.TaskManager.Infra.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio.EclipseWorks.TaskManager.Infra.DataBase.Migrations
{
    [DbContext(typeof(TaskManagerContext))]
    partial class TaskManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Comentario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCricao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTarefa")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdTarefa");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.HistoricoTarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampoAlterado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTarefa")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUsuarioAlteracao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeUsuarioAlteracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NovoValor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValorAntigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTarefa");

                    b.ToTable("HistoricosTarefa");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e563980d-9743-4b27-bd9d-3c98c5a731c7"),
                            Nome = "usuario comum",
                            Perfil = 0
                        },
                        new
                        {
                            Id = new Guid("e32d41d4-5d3b-4b19-a3ec-df8a275058a7"),
                            Nome = "usuario gerente",
                            Perfil = 1
                        });
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("Desafio.EclipseWorks.TaskManager.Domain.Entities.Tarefa", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Desafio.EclipseWorks.TaskManager.Domain.Entities.Usuario", null)
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.HistoricoTarefa", b =>
                {
                    b.HasOne("Desafio.EclipseWorks.TaskManager.Domain.Entities.Tarefa", "Tarefa")
                        .WithMany("Historicos")
                        .HasForeignKey("IdTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Projeto", b =>
                {
                    b.HasOne("Desafio.EclipseWorks.TaskManager.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Tarefa", b =>
                {
                    b.HasOne("Desafio.EclipseWorks.TaskManager.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Tarefa", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Historicos");
                });

            modelBuilder.Entity("Desafio.EclipseWorks.TaskManager.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
